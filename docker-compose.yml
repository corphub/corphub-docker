version: "2"
services:
  corphub-backend:
    image: corphub/corphub-backend:latest
    networks:
      - kong-net
    ports:
      - "8082:8082"
    depends_on:
      - elasticsearch
    links:
      - elasticsearch

  corphub-frontend:
    image: corphub/corphub-frontend:1.10.0
    networks:
      - kong-net
    environment:
      NUXT_PORT: 10001
      elastic_search_host: http://elasticsearch-service:9200
    #depends_on:
    #  - corphub-backend
    #links:
    #  - corphub-backend

  kong-db:
    image: postgres:9.6
    volumes:
      - kong-datastore:/var/lib/postgresql/data
    networks:
      - kong-net
    ports:
      - "15432:5432"
    environment:
      POSTGRES_DB: api-gw
      POSTGRES_USER: kong
      POSTGRES_PASSWORD:

  kong:
    image: kong:1.3.0-alpine-oidc
    depends_on:
      - kong-db
      #- dockerhost
    networks:
      - kong-net
    links:
      - keycloak
    ports:
      - "8000:8000" # Listener
      - "8001:8001" # Admin API
      - "8443:8443" # Listener  (SSL)
      - "8444:8444" # Admin API (SSL)
    #links:
    #  - corphub-frontend
    extra_hosts:
      - "outside:192.168.178.230"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PORT: 5432
      KONG_PG_DATABASE: api-gw
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PLUGINS: oidc

  elasticsearch:
    image: elasticsearch:5
    command: elasticsearch
    networks:
      - kong-net
    environment:
      # This helps ES out with memory usage
      - ES_JAVA_OPTS=-Xmx1g -Xms1g
    volumes:
      # Persist elasticsearch data to a volume
      - elasticsearch:/usr/share/elasticsearch/data
      # Extra ES configuration options
      - ./es/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
      - "9300:9300"

  logstash:
    image: logstash:5
    command: logstash --auto-reload -w 4 -f /etc/logstash/conf.d/logstash.conf
    environment:
      # This helps Logstash out if it gets too busy
      - LS_HEAP_SIZE=2048m
    #volumes:
    # volume mount the logstash config
    # - ./logstash/logstash.conf:/etc/logstash/conf.d/logstash.conf
    ports:
      # Default GELF port
      - "12201:12201/udp"
      # Default UDP port
      - "5000:5000/udp"
      # Default TCP port
      - "5001:5001"
    links:
      - elasticsearch

  kibana:
    image: kibana:5
    environment:
      # Point Kibana to the elasticsearch container
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    links:
      - elasticsearch

  kopf:
    image: rancher/kopf:v0.4.0
    ports:
      - "8080:80"
    environment:
      KOPF_ES_SERVERS: "elasticsearch:9200"
    links:
      - elasticsearch

#  keycloak-db:
#    image: postgres:9.6
#    volumes:
#      - keycloak-datastore:/var/lib/postresql/data
#    networks:
#      - keycloak-net
#    ports:
#      - "25432:5432"
#    environment:
#      POSTGRES_DB:       keycloak
#      POSTGRES_USER:     keycloak
#      POSTGRES_PASSWORD: password
#
#  keycloak:
#    image: jboss/keycloak:7.0.0
#    #depends_on:
#  #    - keycloak-db
#    networks:
#      - keycloak-net
#      - kong-net
#    ports:
#      - "8180:8080"
#    command: -b 0.0.0.0 -Dkeycloak.migration.strategy=validate
#    environment:
#      DB_VENDOR:   POSTGRES
#      DB_ADDR:     keycloak-db
#      DB_PORT:     5432
#      DB_DATABASE: keycloak
#      DB_USER:     keycloak
#      DB_PASSWORD: password
#      KEYCLOAK_USER:     admin
#      KEYCLOAK_PASSWORD: admin

  mysql:
    image: mysql:5.7
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    image: jboss/keycloak
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the MySQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "connectTimeout=30000"
    ports:
      - "8180:8080"
    depends_on:
      - mysql

  konga:
    image: pantsel/konga:latest
    depends_on:
      - kong
    networks:
      - kong-net
    ports:
      - "1337:1337" # konga
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-db
      DB_PORT: '5432'
      DB_USER: kong
      DB_DATABASE: api-gw
      NODE_ENV: development

  #dockerhost:
  #  networks:
  #    - kong-net
  #  image: qoomon/docker-host
  #  cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
  #  mem_limit: 8M
  #  restart: on-failure

networks:
  kong-net:
  keycloak-net:


volumes:
  kong-datastore:
  elasticsearch:
  keycloak-datastore:
  mysql_data:
